//============================================================
//
// klasy: 		MulticastTree
// autor: 		Paweł Kaczyński
// pliki: 		MulticastTree.h, MulticastTree.cpp
//
//============================================================

Klasa przechowująca strukturę maili 'forwardowanych' przez wielu użytkowników. Dal wybranego maila typu FWD, obiekt wyszukuje korzeń (findRoot),
następnie rekurencyjnie tworzy wierzchołki potomne, a potem wracając do góry, przelicza współczynniki takie jak wysokość czy liczba liści
(potrzebne szczególnie do późniejszego rysowania). Wierzchołki (czyli usemberzy) są reprezentowani strukturą Node.

Poza klasą:
	typedef struct Node;			//typ reprezentujący węzęł drzewa (usembera)
									//zawiera usembera, wskazanie na rodzica,
									//vector wskazań na potomków, wektor emaili FWD,
									//unikalne id i inne informacje, takie jak wysokość poddrzewa
									//czy ilość liści

Pola klasy:
	Node* HEAD;					//wskazanie na korzeń
	unsigned long globalId;		//uniknalnie, globalne id dla węzłów
	vector<Node*> Node			//vector wskazań na wszystkie węzły (w kolejności tworzenia)

Metody publiczne:
 	MulticastTree();						//konstruktor pustego drzewo
    MulticastTree(Email* startEmail);		//tworzy obiekt drzewa od razu z węzłami
	~MulticastTree();						//destruktor (wywołuje deleteNodes() )

	Node* createNodes (Node* parent);		//szuka wszystkich możliwych potomków i tworzy je
	Node* findRoot (Email* email);			//rozpoczyna generowanie drzewa od znalezienia korzenia
	Node* findNodeByEmail (Email* email);	//zwraca węzeł dla podanego emaila
	Node* deleteNodes (Node* node);			//usuwa węzeł (tylko jeżeli jest liściem) i zwraca wskazanie na rodzica
											//w.p.p. zwraca nullptr