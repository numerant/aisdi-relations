------------------------- Specyfikacja -------------------------
	
*** SPRINT 1 ****
1	Paweł Kaczyński/Maciej Safarzyński		Jako użytkownik (end-user) chcę mieć możliwość prostego wybrania żądanej operacji poprzez nieskomplikowane menu.
>> Interfejs użytkownika (zmiana koncepcji względem pierwszych założeń) będzie oparty na bibliotece WxWidgets i WxSmith dla programu Code::Blocks dostarczająca edytor interfejsu (frame based) z podstawowymi obiektami typu przycisk, menu (Plik, Edycja...), grafika czy tekst (z formatowaniem HTML)

2	Jakub Maleszewski		Chcę mieć możliwość importu danych z podanego katalogu zawierającego pliki .eml (ewentualnie z przeszukiwaniem podfolderów).
>> Obsługa w IOInterface. W zależności od opcji wybranych w interfejsie (typu przeszukiwanie podfolderów, sprawdzanie plików niezaleznie od rozszerzenia - typ MIME: message/rfc822) wywołujemy odpowiednie metody IOInterface (dokładniejszy opis w IOInterface.txt).

3	Michał Żołyniak/Maciej Safarzyński			Chcę, by program sprawdzał poprawność wczytywanych listów, aby zapobiec katastrofie.
>> Metoda parsera EML w klasie IOInterface. Jeśli e-mail ma właściwą strukturę (wg specyfikacji formatu), możemy zrobić "new Mail" i dodać go do bazy. Jeśli nie, zwracamy odpowiedni wyjątek, np. DirectoryIsEmpty, TargetDoesNotExist, AccessDenied

4	Michał Żołyniak		Po zakończeniu importu danych chcę otrzymać raport z tej operacji (ilość znalezionych plików, poprawnie wczytanych, zignorowanych).
>> Gdy nie pojawi się któryś z powyższych błędów całkowicie przekreślających możliwość wczytania czegokolwiek, zwracamy obiekt zawierający pola typu int zawierające liczbę poprawnie i niepoprawnie wczytanych listów oraz ewentualnie ścieżki do nich.

5	Jakub Maleszewski/Patryk Łucka	Użytkownik ma mieć możliwość dodania pojedynczych maili lub ich zbioru do wcześniej stworzonej bazy.
>> Sprowadza się to do przypadku nr 2, trzeba jedynie używać istniejącego obiektu Database zamiast tworzyć nowy.

6	Maciej Gańko/Patryk Łucka	Jako użytkownik chcę móc przeszukać bazę danych po określonych kryteriach, by łatwo dotrzeć do interesujących mnie wiadomości.
>> Będzie to zrealizowane w zależności od kryterium albo przez prostą iterację po wiadomościach w celu sprawdzenia spełnienia kryterium, albo przez algorytm wyszukiwania binarnego, jeśli dane kryterium będzie tym, którym zbiór wiadomości jest posortowany.

7	Paweł Kaczyński/Maciej Gańko	Chcę mieć możliwość wyświetlenia bazy w różnych formach: uproszczonej, szczegółowej czy tylko niektórych jej elementów.
>> Współpraca metod bazy z interfejsem. Do bazy dochodzi "zapytanie", ona je przerabia i zwraca (w formie tekstowej lub obiektowej) wynik do metody wyświetlającej interfejsu (tabela HTML'owa chociażby)

8	Komendy tekstowe [ERRATA]
>> Interfejs tekstowy zastąpiony graficznym <=> brak wpisywania komend

9	Paweł Kaczyński/Maciej Safarzyński		Dobrym pomysłem byłyby pytania potwierdzające ("czy na pewno?") przy wychodzeniu z programu, zapisywaniu i operacjach na bazie.
>> Komunikaty okienkowe z przyciskami np. "Tak", "Nie" i "Anuluj" potwierdzające ważne operacje

10	Paweł Kaczyński		Jako użytkownik chciałbym by interfejs nie był jednolity (ale był spójny). Kolory, pogrubienie tekstu czy forma tabeli na pewno pomogą w sprawnej jego obsłudze.
>> Paleta kolorów będzie spójna dla pewnych podgrup interefejsu oraz czytelna. Wyświetlanie danych będzie formatowane (np. tak jak w HTMLu dla tabel można to przyzwoicie przedstawić). 

11	Maciej Safarzyński	Jako niezbyt pojętny użytkownik komputera chcę otrzymywać komunikaty o błędach jedynie w zrozumiałej dla CZŁOWIEKA formie. 
>> Komunikaty okienkowe wyjaśniające dokładnie błąd lub po prostu o nim informujące. Aczkolwiek jeśli się da, lepiej unikać okienek i wyświetlać krótkie komunikaty informujące np. przy polu wyszukiwania dla pustego pola wpisać "Pole wyszukiwania nie może być puste!" plus zaznaczenie tego kolorem.